'use strict';

const { parseFetchResult } = require('../parsers/parse-fetch');
const { configurationErrorTask } = require('./task');

function disallowedCommand(command) {
  return /^--upload-pack(=|$)/.test(command);
}

/**
 * @param {string} remote
 * @param {string} branch
 * @param {string[]} customArgs
 * @returns {{commands: string[], format: 'utf-8', parser: Function} | any}
 */
function fetchTask(remote, branch, customArgs) {
  const commands = ['fetch', ...customArgs];
  if (remote && branch) {
    commands.push(remote, branch);
  }

  const banned = commands.find(disallowedCommand);
  if (banned) {
    return configurationErrorTask('git.fetch: potential exploit argument blocked.');
  }

  return {
    commands,
    format: 'utf-8',
    parser: parseFetchResult,
  };
}

module.exports = { fetchTask };

