'use strict';
const v9 = require('../parsers/parse-fetch');
const parseFetchResult = v9.parseFetchResult;
const v10 = require('./task');
const configurationErrorTask = v10.configurationErrorTask;
const disallowedCommand = function (command) {
    const v11 = /^--upload-pack(=|$)/.test(command);
    return v11;
};
const fetchTask = function (remote, branch, customArgs) {
    const commands = [
        'fetch',
        ...customArgs
    ];
    const v12 = remote && branch;
    if (v12) {
        const v13 = commands.push(remote, branch);
        v13;
    }
    const banned = commands.find(disallowedCommand);
    if (banned) {
        const v14 = configurationErrorTask('git.fetch: potential exploit argument blocked.');
        return v14;
    }
    const v15 = {};
    v15.commands = commands;
    v15.format = 'utf-8';
    v15.parser = parseFetchResult;
    return v15;
};
const v16 = {};
v16.fetchTask = fetchTask;
module.exports = v16;