const v202 = function (RED) {
    const v102 = require('../ui');
    var ui = v102(RED);
    var path = require('path');
    var gsp = require.resolve('gridstack');
    var node;
    const v103 = RED.settings;
    const v104 = v103.ui;
    var set = v104 || '{}';
    const BaseNode = function (config) {
        const v105 = RED.nodes;
        const v106 = v105.createNode(this, config);
        v106;
        node = this;
        var baseFontName = '-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif';
        var defaultLightTheme = {};
        defaultLightTheme.baseColor = '#0094CE';
        defaultLightTheme.baseFont = baseFontName;
        var defaultDarkTheme = {};
        defaultDarkTheme.baseColor = '#097479';
        defaultDarkTheme.baseFont = baseFontName;
        const v107 = defaultLightTheme.baseColor;
        var defaultCustomTheme = {};
        defaultCustomTheme.name = 'Untitled Theme 1';
        defaultCustomTheme.baseColor = v107;
        defaultCustomTheme.baseFont = baseFontName;
        var defaultAngularTheme = {};
        defaultAngularTheme.primary = 'indigo';
        defaultAngularTheme.accents = 'teal';
        defaultAngularTheme.warn = 'red';
        defaultAngularTheme.background = 'grey';
        var themeName;
        const v108 = config.theme;
        const v109 = typeof v108;
        const v110 = v109 === 'string';
        if (v110) {
            themeName = config.theme;
        } else {
            const v111 = config.theme;
            const v112 = v111.name;
            themeName = v112 || 'theme-light';
        }
        var defaultThemeState = {};
        const v113 = themeName === 'theme-light';
        if (v113) {
            const v114 = {};
            v114.value = baseFontName;
            defaultThemeState['base-font'] = v114;
            const v115 = {};
            v115.value = '#0094CE';
            defaultThemeState['base-color'] = v115;
            const v116 = {};
            v116.value = '#fafafa';
            defaultThemeState['page-backgroundColor'] = v116;
            const v117 = {};
            v117.value = '#0094CE';
            defaultThemeState['page-titlebar-backgroundColor'] = v117;
            const v118 = {};
            v118.value = '#ffffff';
            defaultThemeState['page-sidebar-backgroundColor'] = v118;
            const v119 = {};
            v119.value = '#ffffff';
            defaultThemeState['group-backgroundColor'] = v119;
            const v120 = {};
            v120.value = '#000000';
            defaultThemeState['group-textColor'] = v120;
            const v121 = {};
            v121.value = '#ffffff';
            defaultThemeState['group-borderColor'] = v121;
            const v122 = {};
            v122.value = '#111111';
            defaultThemeState['widget-textColor'] = v122;
            const v123 = {};
            v123.value = '#0094CE';
            defaultThemeState['widget-backgroundColor'] = v123;
        } else {
            const v124 = {};
            v124.value = baseFontName;
            defaultThemeState['base-font'] = v124;
            const v125 = {};
            v125.value = '#097479';
            defaultThemeState['base-color'] = v125;
            const v126 = {};
            v126.value = '#111111';
            defaultThemeState['page-backgroundColor'] = v126;
            const v127 = {};
            v127.value = '#097479';
            defaultThemeState['page-titlebar-backgroundColor'] = v127;
            const v128 = {};
            v128.value = '#333333';
            defaultThemeState['page-sidebar-backgroundColor'] = v128;
            const v129 = {};
            v129.value = '#333333';
            defaultThemeState['group-backgroundColor'] = v129;
            const v130 = {};
            v130.value = '#10cfd8';
            defaultThemeState['group-textColor'] = v130;
            const v131 = {};
            v131.value = '#555555';
            defaultThemeState['group-borderColor'] = v131;
            const v132 = {};
            v132.value = '#eeeeee';
            defaultThemeState['widget-textColor'] = v132;
            const v133 = {};
            v133.value = '#097479';
            defaultThemeState['widget-backgroundColor'] = v133;
        }
        const v134 = config.theme;
        const v135 = v134.lightTheme;
        const v136 = v135 || defaultLightTheme;
        const v137 = config.theme;
        const v138 = v137.darkTheme;
        const v139 = v138 || defaultDarkTheme;
        const v140 = config.theme;
        const v141 = v140.customTheme;
        const v142 = v141 || defaultCustomTheme;
        const v143 = config.theme;
        const v144 = v143.angularTheme;
        const v145 = v144 || defaultAngularTheme;
        const v146 = config.theme;
        const v147 = v146.themeState;
        const v148 = v147 || defaultThemeState;
        var defaultThemeObject = {};
        defaultThemeObject.name = themeName;
        defaultThemeObject.lightTheme = v136;
        defaultThemeObject.darkTheme = v139;
        defaultThemeObject.customTheme = v142;
        defaultThemeObject.angularTheme = v145;
        defaultThemeObject.themeState = v148;
        const v149 = config.site;
        const v150 = {};
        v150.theme = defaultThemeObject;
        v150.site = v149;
        this.config = v150;
        const v151 = this.config;
        const v152 = ui.addBaseConfig(v151);
        v152;
    };
    const v153 = RED.nodes;
    const v154 = v153.registerType('ui_base', BaseNode);
    v154;
    const v155 = RED.library;
    const v156 = v155.register('themes');
    v156;
    const v157 = RED.httpAdmin;
    const v159 = function (req, res) {
        const v158 = res.json(set);
        v158;
    };
    const v160 = v157.get('/uisettings', v159);
    v160;
    const v161 = path.join(__dirname, '../dist/');
    var dname = path.normalize(v161);
    var gspath = path.dirname(gsp);
    const v162 = RED.httpAdmin;
    const v173 = function (req, res) {
        const v163 = req.params;
        const v164 = v163[0];
        var filename = path.join(__dirname, '../dist/js', v164);
        const v165 = filename.indexOf(dname);
        const v166 = v165 !== 0;
        if (v166) {
            const v167 = res.sendStatus(404);
            v167;
        }
        const v171 = function (err) {
            if (err) {
                if (node) {
                    const v168 = filename + ' not found. Maybe running in dev mode.';
                    const v169 = node.warn(v168);
                    v169;
                } else {
                    const v170 = console.log('ui_base - error:', err);
                    v170;
                }
            }
        };
        const v172 = res.sendFile(filename, v171);
        v172;
    };
    const v174 = v162.get('/ui_base/js/*', v173);
    v174;
    const v175 = RED.httpAdmin;
    const v187 = function (req, res) {
        const v176 = path.dirname(gsp);
        const v177 = req.params;
        const v178 = v177[0];
        var filename = path.join(v176, v178);
        const v179 = filename.indexOf(gspath);
        const v180 = v179 !== 0;
        if (v180) {
            const v181 = res.sendStatus(404);
            v181;
        }
        const v185 = function (err) {
            if (err) {
                if (node) {
                    const v182 = filename + ' not found. Maybe running in dev mode.';
                    const v183 = node.warn(v182);
                    v183;
                } else {
                    const v184 = console.log('ui_base - error:', err);
                    v184;
                }
            }
        };
        const v186 = res.sendFile(filename, v185);
        v186;
    };
    const v188 = v175.get('/ui_base/gs/*', v187);
    v188;
    const v189 = RED.httpAdmin;
    const v200 = function (req, res) {
        const v190 = req.params;
        const v191 = v190[0];
        var filename = path.join(__dirname, '../dist/css', v191);
        const v192 = filename.indexOf(dname);
        const v193 = v192 !== 0;
        if (v193) {
            const v194 = res.sendStatus(404);
            v194;
        }
        const v198 = function (err) {
            if (err) {
                if (node) {
                    const v195 = filename + ' not found. Maybe running in dev mode.';
                    const v196 = node.warn(v195);
                    v196;
                } else {
                    const v197 = console.log('ui_base - error:', err);
                    v197;
                }
            }
        };
        const v199 = res.sendFile(filename, v198);
        v199;
    };
    const v201 = v189.get('/ui_base/css/*', v200);
    v201;
};
module.exports = v202;