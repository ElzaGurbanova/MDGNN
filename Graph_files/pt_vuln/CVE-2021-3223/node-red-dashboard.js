const v182 = function (RED) {
    const v92 = require('../ui');
    var ui = v92(RED);
    var path = require('path');
    var gsp = require.resolve('gridstack');
    var node;
    const v93 = RED.settings;
    const v94 = v93.ui;
    var set = v94 || '{}';
    const BaseNode = function (config) {
        const v95 = RED.nodes;
        const v96 = v95.createNode(this, config);
        v96;
        node = this;
        var baseFontName = '-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif';
        var defaultLightTheme = {};
        defaultLightTheme.baseColor = '#0094CE';
        defaultLightTheme.baseFont = baseFontName;
        var defaultDarkTheme = {};
        defaultDarkTheme.baseColor = '#097479';
        defaultDarkTheme.baseFont = baseFontName;
        const v97 = defaultLightTheme.baseColor;
        var defaultCustomTheme = {};
        defaultCustomTheme.name = 'Untitled Theme 1';
        defaultCustomTheme.baseColor = v97;
        defaultCustomTheme.baseFont = baseFontName;
        var defaultAngularTheme = {};
        defaultAngularTheme.primary = 'indigo';
        defaultAngularTheme.accents = 'teal';
        defaultAngularTheme.warn = 'red';
        defaultAngularTheme.background = 'grey';
        var themeName;
        const v98 = config.theme;
        const v99 = typeof v98;
        const v100 = v99 === 'string';
        if (v100) {
            themeName = config.theme;
        } else {
            const v101 = config.theme;
            const v102 = v101.name;
            themeName = v102 || 'theme-light';
        }
        var defaultThemeState = {};
        const v103 = themeName === 'theme-light';
        if (v103) {
            const v104 = {};
            v104.value = baseFontName;
            defaultThemeState['base-font'] = v104;
            const v105 = {};
            v105.value = '#0094CE';
            defaultThemeState['base-color'] = v105;
            const v106 = {};
            v106.value = '#fafafa';
            defaultThemeState['page-backgroundColor'] = v106;
            const v107 = {};
            v107.value = '#0094CE';
            defaultThemeState['page-titlebar-backgroundColor'] = v107;
            const v108 = {};
            v108.value = '#ffffff';
            defaultThemeState['page-sidebar-backgroundColor'] = v108;
            const v109 = {};
            v109.value = '#ffffff';
            defaultThemeState['group-backgroundColor'] = v109;
            const v110 = {};
            v110.value = '#000000';
            defaultThemeState['group-textColor'] = v110;
            const v111 = {};
            v111.value = '#ffffff';
            defaultThemeState['group-borderColor'] = v111;
            const v112 = {};
            v112.value = '#111111';
            defaultThemeState['widget-textColor'] = v112;
            const v113 = {};
            v113.value = '#0094CE';
            defaultThemeState['widget-backgroundColor'] = v113;
        } else {
            const v114 = {};
            v114.value = baseFontName;
            defaultThemeState['base-font'] = v114;
            const v115 = {};
            v115.value = '#097479';
            defaultThemeState['base-color'] = v115;
            const v116 = {};
            v116.value = '#111111';
            defaultThemeState['page-backgroundColor'] = v116;
            const v117 = {};
            v117.value = '#097479';
            defaultThemeState['page-titlebar-backgroundColor'] = v117;
            const v118 = {};
            v118.value = '#333333';
            defaultThemeState['page-sidebar-backgroundColor'] = v118;
            const v119 = {};
            v119.value = '#333333';
            defaultThemeState['group-backgroundColor'] = v119;
            const v120 = {};
            v120.value = '#10cfd8';
            defaultThemeState['group-textColor'] = v120;
            const v121 = {};
            v121.value = '#555555';
            defaultThemeState['group-borderColor'] = v121;
            const v122 = {};
            v122.value = '#eeeeee';
            defaultThemeState['widget-textColor'] = v122;
            const v123 = {};
            v123.value = '#097479';
            defaultThemeState['widget-backgroundColor'] = v123;
        }
        const v124 = config.theme;
        const v125 = v124.lightTheme;
        const v126 = v125 || defaultLightTheme;
        const v127 = config.theme;
        const v128 = v127.darkTheme;
        const v129 = v128 || defaultDarkTheme;
        const v130 = config.theme;
        const v131 = v130.customTheme;
        const v132 = v131 || defaultCustomTheme;
        const v133 = config.theme;
        const v134 = v133.angularTheme;
        const v135 = v134 || defaultAngularTheme;
        const v136 = config.theme;
        const v137 = v136.themeState;
        const v138 = v137 || defaultThemeState;
        var defaultThemeObject = {};
        defaultThemeObject.name = themeName;
        defaultThemeObject.lightTheme = v126;
        defaultThemeObject.darkTheme = v129;
        defaultThemeObject.customTheme = v132;
        defaultThemeObject.angularTheme = v135;
        defaultThemeObject.themeState = v138;
        const v139 = config.site;
        const v140 = {};
        v140.theme = defaultThemeObject;
        v140.site = v139;
        this.config = v140;
        const v141 = this.config;
        const v142 = ui.addBaseConfig(v141);
        v142;
    };
    const v143 = RED.nodes;
    const v144 = v143.registerType('ui_base', BaseNode);
    v144;
    const v145 = RED.library;
    const v146 = v145.register('themes');
    v146;
    const v147 = RED.httpAdmin;
    const v149 = function (req, res) {
        const v148 = res.json(set);
        v148;
    };
    const v150 = v147.get('/uisettings', v149);
    v150;
    const v151 = RED.httpAdmin;
    const v159 = function (req, res) {
        const v152 = req.params;
        const v153 = v152[0];
        var filename = path.join(__dirname, '../dist/js', v153);
        const v157 = function (err) {
            if (err) {
                if (node) {
                    const v154 = filename + ' not found. Maybe running in dev mode.';
                    const v155 = node.warn(v154);
                    v155;
                } else {
                    const v156 = console.log('ui_base - error:', err);
                    v156;
                }
            }
        };
        const v158 = res.sendFile(filename, v157);
        v158;
    };
    const v160 = v151.get('/ui_base/js/*', v159);
    v160;
    const v161 = RED.httpAdmin;
    const v170 = function (req, res) {
        const v162 = path.dirname(gsp);
        const v163 = req.params;
        const v164 = v163[0];
        var filename = path.join(v162, v164);
        const v168 = function (err) {
            if (err) {
                if (node) {
                    const v165 = filename + ' not found. Maybe running in dev mode.';
                    const v166 = node.warn(v165);
                    v166;
                } else {
                    const v167 = console.log('ui_base - error:', err);
                    v167;
                }
            }
        };
        const v169 = res.sendFile(filename, v168);
        v169;
    };
    const v171 = v161.get('/ui_base/gs/*', v170);
    v171;
    const v172 = RED.httpAdmin;
    const v180 = function (req, res) {
        const v173 = req.params;
        const v174 = v173[0];
        var filename = path.join(__dirname, '../dist/css', v174);
        const v178 = function (err) {
            if (err) {
                if (node) {
                    const v175 = filename + ' not found. Maybe running in dev mode.';
                    const v176 = node.warn(v175);
                    v176;
                } else {
                    const v177 = console.log('ui_base - error:', err);
                    v177;
                }
            }
        };
        const v179 = res.sendFile(filename, v178);
        v179;
    };
    const v181 = v172.get('/ui_base/css/*', v180);
    v181;
};
module.exports = v182;