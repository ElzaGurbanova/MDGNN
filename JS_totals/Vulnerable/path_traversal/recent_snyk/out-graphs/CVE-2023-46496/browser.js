const v45 = require('path');
const join = v45.join;
const v46 = require('fs');
const existsSync = v46.existsSync;
const readdirSync = v46.readdirSync;
const v47 = require('@evershop/evershop/src/lib/helpers');
const CONSTANTS = v47.CONSTANTS;
const v48 = require('@evershop/evershop/src/lib/router/buildUrl');
const buildUrl = v48.buildUrl;
const v49 = require('@evershop/evershop/src/lib/util/httpStatus');
const INVALID_PAYLOAD = v49.INVALID_PAYLOAD;
const OK = v49.OK;
const v88 = (request, response, delegate, next) => {
    const v50 = request.params;
    const v51 = v50[0];
    const path = v51 || '';
    const v52 = CONSTANTS.MEDIAPATH;
    const v53 = join(v52, path);
    const v54 = existsSync(v53);
    const v55 = !v54;
    if (v55) {
        const v56 = response.status(INVALID_PAYLOAD);
        const v57 = {};
        v57.status = INVALID_PAYLOAD;
        v57.message = 'Requested path does not exist';
        const v58 = { error: v57 };
        const v59 = v56.json(v58);
        v59;
    } else {
        const v60 = response.status(OK);
        v60;
        const v61 = CONSTANTS.MEDIAPATH;
        const v62 = join(v61, path);
        const v63 = { withFileTypes: true };
        const v64 = readdirSync(v62, v63);
        const v66 = dirent => {
            const v65 = dirent.isDirectory();
            return v65;
        };
        const v67 = v64.filter(v66);
        const v69 = dirent => {
            const v68 = dirent.name;
            return v68;
        };
        const v70 = v67.map(v69);
        const v71 = CONSTANTS.MEDIAPATH;
        const v72 = join(v71, path);
        const v73 = { withFileTypes: true };
        const v74 = readdirSync(v72, v73);
        const v76 = dirent => {
            const v75 = dirent.isFile();
            return v75;
        };
        const v77 = v74.filter(v76);
        const v83 = f => {
            const v78 = f.name;
            const v79 = [`${ path }/${ v78 }`];
            const v80 = buildUrl('staticAsset', v79);
            const v81 = f.name;
            const v82 = {};
            v82.url = v80;
            v82.name = v81;
            return v82;
        };
        const v84 = v77.map(v83);
        const v85 = {};
        v85.folders = v70;
        v85.files = v84;
        const v86 = { data: v85 };
        const v87 = response.json(v86);
        v87;
    }
};
module.exports = v88;